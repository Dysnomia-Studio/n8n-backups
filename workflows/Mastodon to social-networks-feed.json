{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "Get all posts for X on Mastodon",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all posts for X on Mastodon": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-26T18:15:32.627Z",
  "id": "9W5cTL7JFRSCiux9",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Mastodon to social-networks-feed",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.url }}",
        "options": {}
      },
      "id": "43775b54-f8d9-4701-b779-09962497c54b",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        400,
        420
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "Z1uIAkjzjVDwhU8n",
          "name": "Discord Webhook - social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "2f6cf145-e9f6-4d9e-91f6-8599bf5da42f",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        520
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "statuses",
        "options": {}
      },
      "id": "0c0a4b46-e4d8-4087-bcdd-64962aeca2cc",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        0,
        520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "a66f667f-078a-449e-987b-516ca2443ba5",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -740,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ new Date($json.created_at).getTime() }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "69b68531-6c38-4d37-8f76-42a7228171d1",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        180,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "d4cfd432-9a57-4130-b5fc-798b1527f43e",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n]"
      },
      "id": "b97bc5ea-a07b-4317-9ee7-ae052be2725a",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        520
      ]
    },
    {
      "parameters": {
        "url": "https://mastodon.gamedev.place/api/v2/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $json.value }}"
            },
            {
              "name": "type",
              "value": "statuses"
            }
          ]
        },
        "options": {}
      },
      "id": "5105ff29-0085-4f72-a92e-7dfffe971934",
      "name": "Get all posts for X on Mastodon",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -180,
        520
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "tCDU7paqL3TCkBRE",
          "name": "mastodon.gamedev.place - Elanis"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrencyRules": []
    },
    "global": {
      "lastExecution": 1719853196839
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-07-01T17:00:06.000Z",
  "versionId": "9d13b5de-9006-4b51-842e-4df18b16ebaa"
}