{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-29T11:47:58.297Z",
  "id": "SYJgcVHzsKkRvNQp",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Reddit to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.url }}",
        "options": {}
      },
      "id": "9f2b53b7-a647-4ab8-8049-cdf06134171c",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        320,
        420
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "Z1uIAkjzjVDwhU8n",
          "name": "Discord Webhook - social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "532db7c9-0ea3-4c17-9968-399a0f2d4a06",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "76a49830-da86-4131-8362-da2efc05ca4d",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -740,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ $json.created * 1000 }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c10862f8-788f-453f-beac-84d863adf0bd",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        40,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "1e0ee1de-77e3-4cd1-b34b-32c72e4cd799",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n]"
      },
      "id": "dfe866db-9819-4455-afb5-443d4b82bc4e",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        520
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "={{ $json.value }}",
        "additionalFields": {
          "sort": "new"
        }
      },
      "id": "69c8f94b-70a0-48d3-8476-9d02aaa524d6",
      "name": "Reddit",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        -180,
        520
      ],
      "credentials": {
        "redditOAuth2Api": {
          "id": "uOYHAeKaCHXDPKoY",
          "name": "Reddit account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrencyRules": [],
      "recurrenceRules": []
    },
    "global": {
      "lastExecution": 1722924046436
    }
  },
  "tags": [
    {
      "createdAt": "2024-08-08T19:41:09.423Z",
      "updatedAt": "2024-08-08T19:41:09.423Z",
      "id": "Z6eTqcJ0heLsAhux",
      "name": "to-discord-private"
    },
    {
      "createdAt": "2024-08-08T19:44:18.099Z",
      "updatedAt": "2024-08-08T19:44:18.099Z",
      "id": "kUU4nhfgxvLeWtiz",
      "name": "from-reddit"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-08-08T19:44:45.000Z",
  "versionId": "68efe0ad-eec3-4179-a50e-085a47f9f6a3"
}