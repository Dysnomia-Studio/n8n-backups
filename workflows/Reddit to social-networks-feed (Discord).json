{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Filter out subreddits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter out subreddits": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-24T16:34:14.911Z",
  "id": "9YD4vxIuXwurqkk3",
  "isArchived": false,
  "meta": null,
  "name": "Reddit to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.url }}",
        "options": {}
      },
      "id": "b333aea6-6f94-47c2-a291-5f4de519af1b",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        224,
        0
      ],
      "webhookId": "71745d20-e604-4e69-aa54-4de8d5a118f6",
      "credentials": {
        "discordWebhookApi": {
          "id": "1FNPFG982ecICkYg",
          "name": "social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "1928c7b5-6597-45cb-bc86-54b643e5da6b",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -864,
        112
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "f11e961e-53e2-4fc4-af2a-8c35fe18ac85",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1056,
        112
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ $json.created * 1000 }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b61dd99-94ac-4bab-a418-d7331ab5f1ef",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -288,
        112
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "6da0b627-e5fc-43b7-9cca-dc8146c33a32",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n  { value: \"Dysnomia\" },\n  { value: \"Logistik\" }\n]"
      },
      "id": "c4b0adad-83af-405b-b488-bdd3d70da948",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -688,
        112
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "={{ $json.value }}",
        "additionalFields": {
          "sort": "new"
        }
      },
      "id": "a9ff84cd-8f00-44e6-ab7b-97b8b9df790b",
      "name": "Reddit",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        -496,
        112
      ],
      "credentials": {
        "redditOAuth2Api": {
          "id": "zLidLoVOx1Idfg5B",
          "name": "Reddit account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1e64fe27-824d-4285-b4b6-502c5e62baf3",
              "leftValue": "={{[ '40kLore', 'Aktien', 'Aktientool', 'Aktientrend', 'allthemods', 'arbeitsleben', 'Azubis', 'beziehungen', 'bundeswehr', 'CanadianForces', 'confect', 'de_EDV', 'dkkarriere', 'dkloenseddel', 'drumkitsleaks', 'fahrerjobs_', 'Finanznachrichten', 'franchiseunternehmen', 'GeschichtsMaimais', 'Gothenburg', 'Handwerker', 'indonesiabebas', 'LegaladviceGerman', 'lewdgames', 'Linz', 'luftablassen', 'mauerstrassenwetten', 'NewToDenmark', 'OnceUponAGalaxy', 'OnePieceSpoilers', 'Pflege', 'RedditJobBoard', 'remotivejobs', 'spitzenverdiener', 'SprocketTankDesign', 'StardewValleyMods', 'StardewValley', 'Studium', 'Sverigesforsvarsmakt', 'Switzerland', 'TheSerumPresetTrade', 'wallstreetbetsGER', 'WarhammerGermany' ]}}",
              "rightValue": "={{ $json.subreddit }}",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            },
            {
              "id": "ba29686b-38b9-443f-a24a-b0412f40d48b",
              "leftValue": "={{ $json.subreddit }}",
              "rightValue": "/^jobs[a-z]*$/i",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -64,
        0
      ],
      "id": "129f6893-04f9-4010-a1b2-69870b802f22",
      "name": "Filter out subreddits"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-01-24T16:34:14.918Z",
      "updatedAt": "2025-01-24T16:34:14.918Z",
      "role": "workflow:owner",
      "workflowId": "9YD4vxIuXwurqkk3",
      "projectId": "eAQxkiYNZBMLrPPR"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-01-24T16:34:19.370Z",
      "updatedAt": "2025-01-24T16:34:19.370Z",
      "id": "d12Rbf3Ti1EZATuZ",
      "name": "from-reddit"
    },
    {
      "createdAt": "2025-01-24T16:28:37.143Z",
      "updatedAt": "2025-01-24T16:28:37.143Z",
      "id": "ieKlQBu6AZC4wykv",
      "name": "to-discord-private"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-07T06:30:05.000Z",
  "versionId": "cb271eac-dd0d-4437-a591-7b9d65ec3314"
}