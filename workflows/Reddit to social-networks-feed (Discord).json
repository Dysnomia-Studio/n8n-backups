{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-02T16:51:19.746Z",
  "id": "Q679T5jfd8gpKs63",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Reddit to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.url }}",
        "options": {}
      },
      "id": "f2e97853-1ab8-4569-bd0c-f23a84e62020",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        460,
        460
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "7GJE0UNQkqw0bawY",
          "name": "social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "3a88a65e-e87b-4d56-818a-cc9cb248c0fb",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        560
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "f13fb465-787e-4164-a5d1-54d2ca07fce9",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -600,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ $json.created * 1000 }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fecd9eb8-09ec-4165-b46d-760f3d5cded7",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        180,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "f1cbe984-39bf-4ac7-8775-4c04fb209728",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n  { value: \"Dysnomia\" },\n]"
      },
      "id": "1cd4caa0-2707-4156-8236-161cd52915cf",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -220,
        560
      ]
    },
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "={{ $json.value }}",
        "additionalFields": {
          "sort": "new"
        }
      },
      "id": "d8697d92-6478-4a60-bc0e-4ea3211e14c3",
      "name": "Reddit",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        -40,
        560
      ],
      "credentials": {
        "redditOAuth2Api": {
          "id": "V4pYccsF0EkPxx6b",
          "name": "Reddit account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrenceRules": []
    },
    "global": {
      "lastExecution": 1731931208870
    }
  },
  "tags": [
    {
      "createdAt": "2024-11-02T16:36:53.857Z",
      "updatedAt": "2024-11-02T16:36:53.857Z",
      "id": "9XaKO3szxYPXQNkk",
      "name": "to-discord-private"
    },
    {
      "createdAt": "2024-11-02T16:51:32.574Z",
      "updatedAt": "2024-11-02T16:51:32.574Z",
      "id": "aWc9hvN9GMiQQKsq",
      "name": "from-reddit"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-11-02T16:54:41.000Z",
  "versionId": "70c08532-854d-4103-9e85-9c9f93602080"
}