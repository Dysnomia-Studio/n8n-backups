{
  "active": false,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-02T16:40:20.629Z",
  "id": "sf9bq69ifixg6AD5",
  "meta": null,
  "name": "Instagram to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=https://youtu.be/{{ $json.id.videoId }}",
        "options": {}
      },
      "id": "00892f4f-ad18-44d5-a69c-5a1b3db73d0b",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "6b0c0c97-55fa-41ab-a0be-cd6416d4d91d",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        560
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "b5f6bedd-9b67-46d8-9764-9cf4fc1677a6",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -620,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ new Date($json.snippet.publishedAt).getTime() }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "a6eeb994-e040-4da7-b735-e713b1755d9a",
              "leftValue": "={{ $json.id.kind }}",
              "rightValue": "youtube#video",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a4f7b05-8f14-4f40-9b88-f94d01968961",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        200,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "80bfc5eb-ea74-448d-8f20-c80e8b368f54",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n]"
      },
      "id": "e5bdfd39-3671-4415-b76c-a7429a563483",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        560
      ]
    },
    {
      "parameters": {
        "resource": "video",
        "filters": {
          "q": "={{ $json.value }}"
        },
        "options": {}
      },
      "id": "512c81f1-f706-43f2-a7f8-93af9c664e86",
      "name": "YouTube",
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        -20,
        560
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-11-02T16:36:53.857Z",
      "updatedAt": "2024-11-02T16:36:53.857Z",
      "id": "9XaKO3szxYPXQNkk",
      "name": "to-discord-private"
    },
    {
      "createdAt": "2024-11-02T16:40:36.986Z",
      "updatedAt": "2024-11-02T16:40:36.986Z",
      "id": "bigaOyFjJwrMI2dl",
      "name": "from-instagram"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-02T16:40:48.000Z",
  "versionId": "113190b2-50bf-4623-9fb6-c4f2e46fd3d3"
}