{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-08T19:47:12.482Z",
  "id": "a8OkHZYr8ZnaaV7q",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Youtube to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=https://youtu.be/{{ $json.id.videoId }}",
        "options": {}
      },
      "id": "f02dc917-85bb-4d90-ab4b-011e99b67049",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        340,
        420
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "Z1uIAkjzjVDwhU8n",
          "name": "Discord Webhook - social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "5347908d-c646-4a00-b07e-4f940d5fcafd",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "4d2d2865-5add-4e0e-8c67-b63f06b66147",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -740,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ new Date($json.snippet.publishedAt).getTime() }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "a6eeb994-e040-4da7-b735-e713b1755d9a",
              "leftValue": "={{ $json.id.kind }}",
              "rightValue": "youtube#video",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "82e4db97-b2a0-4494-b96a-9041568677f2",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        80,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "0767dcd1-8c37-4e8e-836a-5b7cf50929ed",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n]"
      },
      "id": "cac46621-c5e3-4d82-8f83-63db0fcf8806",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        520
      ]
    },
    {
      "parameters": {
        "resource": "video",
        "filters": {
          "publishedAfter": "={{ new Date($('Set last update date if never done').item.json.lastExecution - 1000).toISOString() }}",
          "q": "=\"{{ $json.value }}\""
        },
        "options": {}
      },
      "id": "6bfb93a3-fb30-49de-81ec-75be917c5f55",
      "name": "YouTube",
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        -140,
        520
      ],
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "bYly4dT51CPdXsDY",
          "name": "YouTube account: Dysnomia"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrencyRules": [],
      "recurrenceRules": []
    },
    "global": {
      "lastExecution": 1722924046436
    }
  },
  "tags": [
    {
      "createdAt": "2024-08-08T19:47:07.893Z",
      "updatedAt": "2024-08-08T19:47:07.893Z",
      "id": "SE4rD6o0zsFRWMRc",
      "name": "from-youtube"
    },
    {
      "createdAt": "2024-08-08T19:41:09.423Z",
      "updatedAt": "2024-08-08T19:41:09.423Z",
      "id": "Z6eTqcJ0heLsAhux",
      "name": "to-discord-private"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-08-08T20:12:09.000Z",
  "versionId": "2bc9e4bb-17ec-4be5-8a04-2cefbf066d9c"
}