{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set games list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter on activity name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep only videos": {
      "main": [
        [
          {
            "node": "Group ids to reduce http requests amount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set games list": {
      "main": [
        [
          {
            "node": "YouTube - Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube - Search": {
      "main": [
        [
          {
            "node": "Keep only videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get activity": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter on activity name": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group ids to reduce http requests amount": {
      "main": [
        [
          {
            "node": "Get activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-02T17:22:24.467Z",
  "id": "6RPX6jKTo6k1o75s",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Youtube to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=https://youtu.be/{{ $json.id.videoId }}",
        "options": {}
      },
      "id": "8ce8617b-55bf-4e4f-879c-d3ecb11f2a11",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        460,
        920
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "7GJE0UNQkqw0bawY",
          "name": "social-networks-feed"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "07f6ab42-1d7f-4ea4-b195-9bfc15ddc029",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        460
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "d52b94d9-5a53-4658-9ece-c0340302c876",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "439ba86f-96c0-4602-adfd-a5dec13c2a6e",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        920
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "id": "093fafbd-b728-4c95-bc7a-d10eea7646f1",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1300,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2a8c3e04-83b6-47ff-a392-0e1e33ee4fe2",
              "leftValue": "={{ $json.id.kind }}",
              "rightValue": "youtube#video",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "63611ca8-b92e-4563-858b-a4024f2e0b21",
      "name": "Keep only videos",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        660,
        700
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n  { value: \"Extortion\" },\n]"
      },
      "id": "b27ef60a-582b-469b-a333-47e13cc8c1cb",
      "name": "Set games list",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        460
      ]
    },
    {
      "parameters": {
        "resource": "video",
        "limit": 50,
        "filters": {
          "publishedAfter": "={{ new Date($('Set last update date if never done').item.json.lastExecution - 1000).toISOString() }}",
          "q": "=\"{{ $json.value }}\"",
          "videoCategoryId": "20"
        },
        "options": {}
      },
      "id": "bea1585b-89f4-4367-9f4e-b7c81bdfdee6",
      "name": "YouTube - Search",
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        460,
        700
      ],
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "yAdyG0B0uEaLTAMd",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://yt.lemnoslife.com/videos?part=activity&id={{ $json.ids }}",
        "options": {}
      },
      "id": "184c6d52-750d-471f-b296-4ee61ea21b8c",
      "name": "Get activity",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1100,
        700
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "a6eeb994-e040-4da7-b735-e713b1755d9a",
              "leftValue": "={{ $('Set games list').all().map(x => x.json.value) }}",
              "rightValue": "={{ $json.activity.name }}",
              "operator": {
                "type": "array",
                "operation": "contains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e57e27b1-fc04-40ab-ace0-d3c327cf2805",
      "name": "Filter on activity name",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1520,
        700
      ]
    },
    {
      "parameters": {
        "jsCode": "let cache = [];\nconst queries = [];\nfor (const item of $input.all()) {\n  if(cache.length === 50) {\n    queries.push({\n      ids: cache.join(',')\n    });\n    cache = [];\n  }\n\n  if(item?.json?.id?.videoId) {\n    cache.push(item.json.id.videoId);\n  }\n}\n\nqueries.push({\n  ids: cache.join(',')\n});\n\nreturn queries;"
      },
      "id": "119cbec7-36e7-47ca-9390-e4e5d1a7163f",
      "name": "Group ids to reduce http requests amount",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        700
      ],
      "executeOnce": true
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrenceRules": [
        10
      ]
    },
    "global": {
      "lastExecution": 1729969232669
    }
  },
  "tags": [
    {
      "createdAt": "2024-11-02T16:36:53.857Z",
      "updatedAt": "2024-11-02T16:36:53.857Z",
      "id": "9XaKO3szxYPXQNkk",
      "name": "to-discord-private"
    },
    {
      "createdAt": "2024-11-02T17:22:32.935Z",
      "updatedAt": "2024-11-02T17:22:32.935Z",
      "id": "KJa9f8KVxcI9AfYx",
      "name": "from-youtube"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-11-02T17:25:02.000Z",
  "versionId": "ae822ea5-1d88-46af-bb39-6ad5d433e661"
}