{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Set items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter to get recent posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter to get recent posts": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set items": {
      "main": [
        [
          {
            "node": "Get all posts for X on Mastodon",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all posts for X on Mastodon": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-24T16:29:37.535Z",
  "id": "rVmcI7VsH6EUmEEG",
  "isArchived": false,
  "meta": null,
  "name": "Mastodon to social-networks-feed (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.url }}",
        "options": {}
      },
      "id": "3fd8c14f-a70e-40ae-8dba-2a47d3edc2c9",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "webhookId": "363517a1-53f7-45b3-8a49-b6c19774694b"
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastExecution) {\n  nodeStaticData.lastExecution = new Date().getTime() - 7*24*3600*1000;\n}\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "2b3c2af0-0b04-42b9-a536-5cee250369c5",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -940,
        100
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "statuses",
        "options": {}
      },
      "id": "69b936a4-db78-4a6f-8338-4e308c941c28",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -400,
        100
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "6e75aa69-a752-43b8-b50a-bf3ae21091ba",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1140,
        100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "07f23053-a317-4e1d-b88d-96df9449d146",
              "leftValue": "={{ new Date($json.created_at).getTime() }}",
              "rightValue": "={{ $('Set last update date if never done').item.json.lastExecution }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3f9dd9c3-c035-43f1-8349-fffb84f5e43d",
      "name": "Filter to get recent posts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -220,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastExecution = $now - 10000;\n\nreturn [{lastExecution: nodeStaticData.lastExecution }];"
      },
      "id": "7ffbe8f2-3495-4a88-9f21-3475335a4a5b",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  { value: \"Manufactur'inc\" },\n  { value: \"Manufacturinc\" },\n  { value: \"Alchemistry\" },\n  { value: \"Dysnomia\" },\n]"
      },
      "id": "ca9423cb-8c25-4ee0-88b3-eef244745c0a",
      "name": "Set items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -760,
        100
      ]
    },
    {
      "parameters": {
        "url": "https://mastodon.gamedev.place/api/v2/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $json.value }}"
            },
            {
              "name": "type",
              "value": "statuses"
            }
          ]
        },
        "options": {}
      },
      "id": "fb455f8d-a628-4a62-a849-1ec9112d49bd",
      "name": "Get all posts for X on Mastodon",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -580,
        100
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "sUfUszVT1DPIGkAS",
          "name": "Mastodon"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-01-24T16:29:37.543Z",
      "updatedAt": "2025-01-24T16:29:37.543Z",
      "role": "workflow:owner",
      "workflowId": "rVmcI7VsH6EUmEEG",
      "projectId": "eAQxkiYNZBMLrPPR"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-01-24T16:28:37.368Z",
      "updatedAt": "2025-01-24T16:28:37.368Z",
      "id": "OfADQLq5vKWV1acj",
      "name": "from-mastodon"
    },
    {
      "createdAt": "2025-01-24T16:28:37.143Z",
      "updatedAt": "2025-01-24T16:28:37.143Z",
      "id": "ieKlQBu6AZC4wykv",
      "name": "to-discord-private"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-14T09:51:59.000Z",
  "versionId": "d1501326-3c0b-491f-ab13-b42240fe7a13"
}