{
  "active": true,
  "connections": {
    "Discord": {
      "main": [
        [
          {
            "node": "Set last update date for the next run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set last update date if never done": {
      "main": [
        [
          {
            "node": "Get all posts from Elanis on Bluesky",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every X minutes": {
      "main": [
        [
          {
            "node": "Set last update date if never done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all posts from Elanis on Bluesky": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-26T20:08:24.886Z",
  "id": "RMUJd9Eo4VshlOfQ",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My Bluesky posts to social-networks (Discord)",
  "nodes": [
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.uri }}",
        "options": {}
      },
      "id": "bf5795de-b3f4-4b95-9f9c-619a3d56489f",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        180,
        520
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "9CAghVgMOF7xXWoy",
          "name": "Discord Webhook - social-networks"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nif(!nodeStaticData.lastUpdate) {\n  nodeStaticData.lastUpdate = new Date('2024-04-15').getTime();\n}\n\nreturn [{lastUpdate: nodeStaticData.lastUpdate }];"
      },
      "id": "8b4442ca-964d-4b71-832a-4852e7f49873",
      "name": "Set last update date if never done",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 10
            }
          ]
        }
      },
      "id": "a89bc24a-e417-4b39-93e5-2fa823100f86",
      "name": "Every X minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -740,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the static data of the node\nconst nodeStaticData = $getWorkflowStaticData('global');\n\n// Update its data\nnodeStaticData.lastUpdate = $now - 10000;\n\nreturn [{lastUpdate: nodeStaticData.lastUpdate }];"
      },
      "id": "2213f2f1-273e-4c15-93c8-502589cb5c3b",
      "name": "Set last update date for the next run",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        440,
        520
      ]
    },
    {
      "parameters": {
        "url": "https://public.api.bsky.app/xrpc/app.bsky.feed.getAuthorFeed",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "actor",
              "value": "elanis.bsky.social"
            }
          ]
        },
        "options": {}
      },
      "id": "f55ef60e-2653-438d-a7f9-92a6048c8645",
      "name": "Get all posts from Elanis on Bluesky",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "const nodeStaticData = $getWorkflowStaticData('global');\nlet res = [];\n\nfor(const item of $input.all()[0].json.feed) {\n  if(!(item.post.record.reply && item.post.record.reply.parent) && new Date(item.post.record.createdAt).getTime() > nodeStaticData.lastUpdate) {\n    const parts = item.post.uri.split('/');\n    res.push({ rec: item.post.record.reply, date: new Date(item.post.record.createdAt).getTime(), uri: 'https://bsky.app/profile/elanis.bsky.social/post/' + parts[parts.length - 1] });\n  }\n}\n\nreturn res;"
      },
      "id": "3a45f6eb-1e0c-4c69-8c55-e6133f1f0559",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        520
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Every X minutes": {
      "recurrencyRules": []
    },
    "global": {
      "lastExecution": 1714156414002,
      "lastId": 112325182881404100,
      "lastUpdate": 1715423324152
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-05-11T10:28:54.000Z",
  "versionId": "651bc97b-4536-4296-ae86-2f0a8daa1548"
}